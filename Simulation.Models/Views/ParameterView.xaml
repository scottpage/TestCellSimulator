<UserControl x:Class="ParameterView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:model="clr-namespace:ScottPage.RollsRoyce.TestCellSimulator.Simulation.Models"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="MinWidth"
                    Value="75" />
        </Style>
        <Style TargetType="{x:Type model:ParameterTextBlockFieldView}">
            <Setter Property="TextMinWidth"
                    Value="75" />
        </Style>
        <Style TargetType="{x:Type model:ParameterTextBoxFieldView}">
            <Setter Property="TextMinWidth"
                    Value="75" />
        </Style>
        <Style TargetType="{x:Type model:ParameterDoubleUpDownFieldView}">
            <Setter Property="TextMinWidth"
                    Value="75" />
        </Style>
        <Style TargetType="{x:Type model:ParameterIntegerUpDownFieldView}">
            <Setter Property="TextMinWidth"
                    Value="75" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <StackPanel>
            <model:ParameterTextBlockFieldView Text="Name"
                                               Value="{Binding Path=Name}" />
            <model:ParameterDoubleUpDownFieldView Text="Minimum"
                                                  Value="{Binding Path=Value.Minimum}" />
            <model:ParameterDoubleUpDownFieldView Text="Maximum"
                                                  Value="{Binding Path=Value.Maximum}" />
            <model:ParameterTextBlockFieldView Value="{Binding Path=Value.Average, StringFormat=\{0:F\}}">
                <model:ParameterTextBlockFieldView.Style>
                    <Style TargetType="model:ParameterTextBlockFieldView">
                        <Setter Property="TextMinWidth"
                                Value="75" />
                        <Setter Property="Text"
                                Value="Value (Calculated)" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Value.IsRedirected}"
                                         Value="True">
                                <Setter Property="Text"
                                        Value="Value (Redirected)" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </model:ParameterTextBlockFieldView.Style>
            </model:ParameterTextBlockFieldView>
            <StackPanel Orientation="Horizontal">
                <model:ParameterDoubleUpDownFieldView Text="Redirected Value"
                                                      Value="{Binding Path=Value.RedirectedValue}" />
                <Button Margin="2"
                        Padding="3"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Content="Remove Redirect"
                        Command="{Binding Path=Value.RemoveRedirectCommand}" />
            </StackPanel>
            <model:ParameterIntegerUpDownFieldView Text="Samples to Average"
                                                   Value="{Binding Path=Value.NumberOfSamples}"
                                                   Minimum="1" />
            <model:ParameterTextBlockFieldView Text="Std Dev"
                                               Value="{Binding Path=Value.StandardDeviation, StringFormat=\{0:F\}}" />
            <model:ParameterDoubleUpDownFieldView Text="Stability Threshold"
                                                  Value="{Binding Path=Value.StabilityThreshold}" />
            <model:ParameterTextBlockFieldView Text="Stable?"
                                               Value="{Binding Path=Value.IsStable, StringFormat=\{0:F\}}" />
            <StackPanel Orientation="Horizontal">
                <TextBlock FontWeight="Bold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"
                           TextAlignment="Right"
                           TextWrapping="Wrap"
                           Margin="2"
                           Text="Quality" />
                <Border BorderBrush="Black"
                        BorderThickness="2"
                        CornerRadius="3"
                        Margin="2"
                        VerticalAlignment="Center">
                    <ComboBox SelectedValue="{Binding Path=Value.Quality}"
                              MinWidth="150">
                        <model:Quality>Good</model:Quality>
                        <model:Quality>Suspect</model:Quality>
                        <model:Quality>Bad</model:Quality>
                    </ComboBox>
                </Border>
            </StackPanel>
            <GroupBox BorderThickness="3"
                      BorderBrush="Black">
                <GroupBox.Header>
                    <TextBlock FontWeight="Bold"
                               FontSize="20"
                               Text="Polynomials" />
                </GroupBox.Header>
                <UniformGrid Columns="3">
                    <model:PolynomialView PolynomialName="Prestart"
                                          DataContext="{Binding Path=Value.StoppedPolynomial}" />
                    <model:PolynomialView PolynomialName="Dry Crank"
                                          DataContext="{Binding Path=Value.DryCrankPolynomial}" />
                    <model:PolynomialView PolynomialName="Wet Crank"
                                          DataContext="{Binding Path=Value.WetCrankPolynomial}" />
                    <model:PolynomialView PolynomialName="Start"
                                          DataContext="{Binding Path=Value.StartPolynomial}" />
                    <model:PolynomialView PolynomialName="Running"
                                          DataContext="{Binding Path=Value.RunningPolynomial}" />
                    <model:PolynomialView PolynomialName="Shutdown"
                                          DataContext="{Binding Path=Value.ShutdownPolynomial}" />
                </UniformGrid>
            </GroupBox>
            <GroupBox BorderThickness="3"
                      BorderBrush="Black">
                <GroupBox.Header>
                    <TextBlock FontWeight="Bold"
                               FontSize="20"
                               Text="Alarms" />
                </GroupBox.Header>
                <UniformGrid Columns="2">
                    <model:AlarmView DataContext="{Binding Path=Alarms.High}" />
                    <model:AlarmView DataContext="{Binding Path=Alarms.HighCritical}" />
                    <model:AlarmView DataContext="{Binding Path=Alarms.Low}" />
                    <model:AlarmView DataContext="{Binding Path=Alarms.LowCritical}" />
                </UniformGrid>
            </GroupBox>
        </StackPanel>
    </Grid>
</UserControl>
