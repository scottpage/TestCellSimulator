<Window
    x:Class="AlarmPanelWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:ScottPage.TestCellSimulator.DriverDisplay"
    xmlns:ui="clr-namespace:ScottPage.RollsRoyce.TestCellSimulator.Displays.Framework;assembly=ScottPage.RollsRoyce.TestCellSimulator.Displays.Framework"
    xmlns:mk="clr-namespace:WPFMediaKit.DirectShow.Controls;assembly=WPFMediaKit"
    Background="#FFECE9D8"
    Width="700"
    Height="300"
    Title="{Binding Path=Title}"
    Top="-300"
    Left="580">
    <Window.Resources>
        <Style
            x:Key="AlarmStyle"
            TargetType="{x:Type ListViewItem}">
            <Setter
                Property="HorizontalContentAlignment"
                Value="Stretch" />
            <Setter
                Property="BorderThickness"
                Value="0" />
            <Setter
                Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush
                        Color="White" />
                </Setter.Value>
            </Setter>
                <Setter
                Property="Foreground"
                Value="Red" />
            <Setter
                Property="Background"
                Value="Black" />
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding Path=IsAcknowledged}"
                    Value="False">
                    <Setter
                        Property="Foreground"
                        Value="White" />
                    <Setter
                        Property="Background"
                        Value="Red" />
                </DataTrigger>
                <Trigger
                    Property="IsMouseOver"
                    Value="True">
                    <Setter
                        Property="Foreground"
                        Value="White" />
                    <Setter
                        Property="Background"
                        Value="Red" />
                </Trigger>
                <Trigger
                    Property="IsSelected"
                    Value="True">
                    <Setter
                        Property="Foreground"
                        Value="Red" />
                    <Setter
                        Property="Background"
                        Value="Black" />
                    <Setter
                        Property="BorderThickness"
                        Value="1" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <ui:AlarmTypeToStringConverter
            x:Key="AlarmTypeToStringConverter" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition
                Height="23" />
            <RowDefinition
                Height="23" />
            <RowDefinition />
            <RowDefinition
                Height="23" />
        </Grid.RowDefinitions>
        <Menu
            Name="MainMenu"
            Background="#FFECE9D8">
            <MenuItem
                Header="File" />
            <MenuItem
                Header="Edit" />
            <MenuItem
                Header="View" />
            <MenuItem
                Header="Help" />
        </Menu>
        <ToolBar
            Grid.Row="1"
            Name="ToolBar1"
            Background="#FFECE9D8">
            <ToolBar.Items>
                <Button
                    Width="20"
                    Height="20">
                    <Button.Background>
                        <ImageBrush
                            ImageSource="/DriverDisplay;component/Resources/Icons/Save.ico" />
                    </Button.Background>
                </Button>
                <Button
                    Width="20"
                    Height="20">
                    <Button.Background>
                        <ImageBrush
                            ImageSource="/DriverDisplay;component/Resources/Icons/Print.ico" />
                    </Button.Background>
                </Button>
                <Button
                    Name="AcknoledgeAlarmButton"
                    Width="20"
                    Height="20"
                    Command="{Binding Path=AcknowledgeSelectedAlarmCommand}">
                    <Button.Style>
                        <Style
                            TargetType="{x:Type Button}">
                            <Setter
                                Property="Background">
                                <Setter.Value>
                                    <ImageBrush
                                        ImageSource="/DriverDisplay;component/Resources/Icons/AcknowledgeAlarm.ico" />
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger
                                    Value="False"
                                    Binding="{Binding Path=SelectedAlarm.IsAcknowledged}">
                                    <Setter
                                        Property="Background">
                                        <Setter.Value>
                                            <ImageBrush
                                                ImageSource="/DriverDisplay;component/Resources/Icons/AcknowledgeAlarmEnabled.ico" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <Trigger
                                    Property="IsMouseOver"
                                    Value="True">
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button
                    Name="AcknowledgeAlarmsButton"
                    Height="20"
                    Width="20"
                    Command="{Binding Path=AcknowledgeAllAlarmsCommand}">
                    <Button.Style>
                        <Style
                            TargetType="{x:Type Button}">
                            <Setter
                                Property="Background">
                                <Setter.Value>
                                    <ImageBrush
                                        ImageSource="/DriverDisplay;component/Resources/Icons/AcknowledgeAlarms.ico" />
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger
                                    Value="True"
                                    Binding="{Binding Path=HasUnacknowledgedAlarms}">
                                    <Setter
                                        Property="Background">
                                        <Setter.Value>
                                            <ImageBrush
                                                ImageSource="/DriverDisplay;component/Resources/Icons/AcknowledgeAlarmsEnabled.ico" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </ToolBar.Items>
        </ToolBar>
        <StatusBar
            Grid.Row="3"
            Name="StatusBar1"
            Background="#FFECE9D8">
            <StatusBarItem
                Content="the RTE is scanning" />
            <StatusBarItem
                Content="[0,0]" />
            <StatusBarItem
                Content="[0,0]" />
            <StatusBarItem>
                <StatusBarItem.Content>
                    <TextBlock
                        Text="{Binding Path=CurrentDateTime, StringFormat={}{0:hh:mm:ss}}" />
                </StatusBarItem.Content>
            </StatusBarItem>
        </StatusBar>
        <ListView
            Grid.Row="2"
            Name="AlarmsListView"
            ItemsSource="{Binding Path=Alarms}"
            Background="Black"
            Foreground="Red"
            ItemContainerStyle="{StaticResource AlarmStyle}"
            SelectedItem="{Binding Path=SelectedAlarm}"
            SelectionMode="Single">
            <ListView.View>
                <GridView>
                    <GridViewColumn
                        Header="Channel Name"
                        Width="100"
                        DisplayMemberBinding="{Binding Path=ParameterName}" />
                    <GridViewColumn
                        Header="State"
                        Width="75"
                        DisplayMemberBinding="{Binding Path=Type, Converter={StaticResource AlarmTypeToStringConverter}}" />
                    <GridViewColumn
                        Header="Limit"
                        Width="75"
                        DisplayMemberBinding="{Binding Path=Limit, StringFormat=\{0:F\}}" />
                    <GridViewColumn
                        Header="Current Value"
                        Width="100"
                        DisplayMemberBinding="{Binding Path=CurrentValue, StringFormat=\{0:F\}}" />
                    <GridViewColumn
                        Header="Max/Min Value"
                        Width="100"
                        DisplayMemberBinding="{Binding Path=MinimumMaximum, StringFormat=\{0:F\}}" />
                    <GridViewColumn
                        Header="Max Diviation"
                        Width="100"
                        DisplayMemberBinding="{Binding Path=MaximumDeviation, StringFormat=\{0:F\}}" />
                </GridView>
            </ListView.View>
        </ListView>
        <mk:MediaUriElement
            Volume="{Binding Path=AlarmVolume}"
            Loop="True"
            Source="{Binding Path=AlarmSoundUri}"
            HorizontalAlignment="Left"
            Name="MediaUriElement1"
            VerticalAlignment="Top" />
    </Grid>
</Window>
