'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace SimulationStateService
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SimulationState", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SimulationState
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AirInletTemperatureField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AlarmsField() As SimulationStateService.AlarmValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ConfigurationVersionField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EngineBuildField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EngineModeField As SimulationStateService.EngineMode
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EnginePLCField As SimulationStateService.EnginePLCState
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EnginePartTestField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EngineSerialNumberField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EngineTypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsFullsetRunningField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ParametersField As SimulationStateService.SimulationParameters
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AirInletTemperature() As Double
            Get
                Return Me.AirInletTemperatureField
            End Get
            Set
                If (Me.AirInletTemperatureField.Equals(value) <> true) Then
                    Me.AirInletTemperatureField = value
                    Me.RaisePropertyChanged("AirInletTemperature")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Alarms() As SimulationStateService.AlarmValue()
            Get
                Return Me.AlarmsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AlarmsField, value) <> true) Then
                    Me.AlarmsField = value
                    Me.RaisePropertyChanged("Alarms")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ConfigurationVersion() As Integer
            Get
                Return Me.ConfigurationVersionField
            End Get
            Set
                If (Me.ConfigurationVersionField.Equals(value) <> true) Then
                    Me.ConfigurationVersionField = value
                    Me.RaisePropertyChanged("ConfigurationVersion")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EngineBuild() As String
            Get
                Return Me.EngineBuildField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EngineBuildField, value) <> true) Then
                    Me.EngineBuildField = value
                    Me.RaisePropertyChanged("EngineBuild")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EngineMode() As SimulationStateService.EngineMode
            Get
                Return Me.EngineModeField
            End Get
            Set
                If (Me.EngineModeField.Equals(value) <> true) Then
                    Me.EngineModeField = value
                    Me.RaisePropertyChanged("EngineMode")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EnginePLC() As SimulationStateService.EnginePLCState
            Get
                Return Me.EnginePLCField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EnginePLCField, value) <> true) Then
                    Me.EnginePLCField = value
                    Me.RaisePropertyChanged("EnginePLC")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EnginePartTest() As String
            Get
                Return Me.EnginePartTestField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EnginePartTestField, value) <> true) Then
                    Me.EnginePartTestField = value
                    Me.RaisePropertyChanged("EnginePartTest")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EngineSerialNumber() As String
            Get
                Return Me.EngineSerialNumberField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EngineSerialNumberField, value) <> true) Then
                    Me.EngineSerialNumberField = value
                    Me.RaisePropertyChanged("EngineSerialNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EngineType() As String
            Get
                Return Me.EngineTypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EngineTypeField, value) <> true) Then
                    Me.EngineTypeField = value
                    Me.RaisePropertyChanged("EngineType")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsFullsetRunning() As Boolean
            Get
                Return Me.IsFullsetRunningField
            End Get
            Set
                If (Me.IsFullsetRunningField.Equals(value) <> true) Then
                    Me.IsFullsetRunningField = value
                    Me.RaisePropertyChanged("IsFullsetRunning")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Parameters() As SimulationStateService.SimulationParameters
            Get
                Return Me.ParametersField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ParametersField, value) <> true) Then
                    Me.ParametersField = value
                    Me.RaisePropertyChanged("Parameters")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="EnginePLCState", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services"),  _
     System.SerializableAttribute()>  _
    Partial Public Class EnginePLCState
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IgnitionStateField As SimulationStateService.IgnitionState
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsEMUPowerOnField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsFuelOnField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsGroundPowerOnField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsHighIdleSelectedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsHydraulicPump1DetectedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsHydraulicPump1NotFittedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsHydraulicPump2DetectedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsHydraulicPump2NotFittedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsIgnitor1CommandedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsIgnitor2CommandedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsInFlightField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsManualStartOnField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsMasterCautionActiveField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsMasterWarningActiveField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsStartAirValveOpenedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsStartMasterOnField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StartReadingsField As SimulationStateService.EnginePLCStartReadings
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StartSelectorStateField As SimulationStateService.StartSelectorState
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StopReadingsField As SimulationStateService.EnginePLCStopReadings
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IgnitionState() As SimulationStateService.IgnitionState
            Get
                Return Me.IgnitionStateField
            End Get
            Set
                If (Me.IgnitionStateField.Equals(value) <> true) Then
                    Me.IgnitionStateField = value
                    Me.RaisePropertyChanged("IgnitionState")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsEMUPowerOn() As Boolean
            Get
                Return Me.IsEMUPowerOnField
            End Get
            Set
                If (Me.IsEMUPowerOnField.Equals(value) <> true) Then
                    Me.IsEMUPowerOnField = value
                    Me.RaisePropertyChanged("IsEMUPowerOn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsFuelOn() As Boolean
            Get
                Return Me.IsFuelOnField
            End Get
            Set
                If (Me.IsFuelOnField.Equals(value) <> true) Then
                    Me.IsFuelOnField = value
                    Me.RaisePropertyChanged("IsFuelOn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsGroundPowerOn() As Boolean
            Get
                Return Me.IsGroundPowerOnField
            End Get
            Set
                If (Me.IsGroundPowerOnField.Equals(value) <> true) Then
                    Me.IsGroundPowerOnField = value
                    Me.RaisePropertyChanged("IsGroundPowerOn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsHighIdleSelected() As Boolean
            Get
                Return Me.IsHighIdleSelectedField
            End Get
            Set
                If (Me.IsHighIdleSelectedField.Equals(value) <> true) Then
                    Me.IsHighIdleSelectedField = value
                    Me.RaisePropertyChanged("IsHighIdleSelected")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsHydraulicPump1Detected() As Boolean
            Get
                Return Me.IsHydraulicPump1DetectedField
            End Get
            Set
                If (Me.IsHydraulicPump1DetectedField.Equals(value) <> true) Then
                    Me.IsHydraulicPump1DetectedField = value
                    Me.RaisePropertyChanged("IsHydraulicPump1Detected")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsHydraulicPump1NotFitted() As Boolean
            Get
                Return Me.IsHydraulicPump1NotFittedField
            End Get
            Set
                If (Me.IsHydraulicPump1NotFittedField.Equals(value) <> true) Then
                    Me.IsHydraulicPump1NotFittedField = value
                    Me.RaisePropertyChanged("IsHydraulicPump1NotFitted")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsHydraulicPump2Detected() As Boolean
            Get
                Return Me.IsHydraulicPump2DetectedField
            End Get
            Set
                If (Me.IsHydraulicPump2DetectedField.Equals(value) <> true) Then
                    Me.IsHydraulicPump2DetectedField = value
                    Me.RaisePropertyChanged("IsHydraulicPump2Detected")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsHydraulicPump2NotFitted() As Boolean
            Get
                Return Me.IsHydraulicPump2NotFittedField
            End Get
            Set
                If (Me.IsHydraulicPump2NotFittedField.Equals(value) <> true) Then
                    Me.IsHydraulicPump2NotFittedField = value
                    Me.RaisePropertyChanged("IsHydraulicPump2NotFitted")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsIgnitor1Commanded() As Boolean
            Get
                Return Me.IsIgnitor1CommandedField
            End Get
            Set
                If (Me.IsIgnitor1CommandedField.Equals(value) <> true) Then
                    Me.IsIgnitor1CommandedField = value
                    Me.RaisePropertyChanged("IsIgnitor1Commanded")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsIgnitor2Commanded() As Boolean
            Get
                Return Me.IsIgnitor2CommandedField
            End Get
            Set
                If (Me.IsIgnitor2CommandedField.Equals(value) <> true) Then
                    Me.IsIgnitor2CommandedField = value
                    Me.RaisePropertyChanged("IsIgnitor2Commanded")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsInFlight() As Boolean
            Get
                Return Me.IsInFlightField
            End Get
            Set
                If (Me.IsInFlightField.Equals(value) <> true) Then
                    Me.IsInFlightField = value
                    Me.RaisePropertyChanged("IsInFlight")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsManualStartOn() As Boolean
            Get
                Return Me.IsManualStartOnField
            End Get
            Set
                If (Me.IsManualStartOnField.Equals(value) <> true) Then
                    Me.IsManualStartOnField = value
                    Me.RaisePropertyChanged("IsManualStartOn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsMasterCautionActive() As Boolean
            Get
                Return Me.IsMasterCautionActiveField
            End Get
            Set
                If (Me.IsMasterCautionActiveField.Equals(value) <> true) Then
                    Me.IsMasterCautionActiveField = value
                    Me.RaisePropertyChanged("IsMasterCautionActive")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsMasterWarningActive() As Boolean
            Get
                Return Me.IsMasterWarningActiveField
            End Get
            Set
                If (Me.IsMasterWarningActiveField.Equals(value) <> true) Then
                    Me.IsMasterWarningActiveField = value
                    Me.RaisePropertyChanged("IsMasterWarningActive")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsStartAirValveOpened() As Boolean
            Get
                Return Me.IsStartAirValveOpenedField
            End Get
            Set
                If (Me.IsStartAirValveOpenedField.Equals(value) <> true) Then
                    Me.IsStartAirValveOpenedField = value
                    Me.RaisePropertyChanged("IsStartAirValveOpened")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsStartMasterOn() As Boolean
            Get
                Return Me.IsStartMasterOnField
            End Get
            Set
                If (Me.IsStartMasterOnField.Equals(value) <> true) Then
                    Me.IsStartMasterOnField = value
                    Me.RaisePropertyChanged("IsStartMasterOn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartReadings() As SimulationStateService.EnginePLCStartReadings
            Get
                Return Me.StartReadingsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StartReadingsField, value) <> true) Then
                    Me.StartReadingsField = value
                    Me.RaisePropertyChanged("StartReadings")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartSelectorState() As SimulationStateService.StartSelectorState
            Get
                Return Me.StartSelectorStateField
            End Get
            Set
                If (Me.StartSelectorStateField.Equals(value) <> true) Then
                    Me.StartSelectorStateField = value
                    Me.RaisePropertyChanged("StartSelectorState")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StopReadings() As SimulationStateService.EnginePLCStopReadings
            Get
                Return Me.StopReadingsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StopReadingsField, value) <> true) Then
                    Me.StopReadingsField = value
                    Me.RaisePropertyChanged("StopReadings")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SimulationParameters", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services"),  _
     System.SerializableAttribute(),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(SimulationStateService.TrentParameters)),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(SimulationStateService.TrentXWBParameters))>  _
    Partial Public Class SimulationParameters
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AirInletTemperatureField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FuelPressureField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FuelTemperatureField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HighPressureCompressorPressureField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HighPressureCompressorTemperatureField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LaneABroadbandVibrationField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LaneBBroadbandVibrationField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OilPressureField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OilQuantityField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OilTemperatureField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Shaft1Field As SimulationStateService.ShaftValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Shaft1LaneAVibrationField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Shaft1LaneBVibrationField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Shaft2Field As SimulationStateService.ShaftValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Shaft2LaneAVibrationField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Shaft2LaneBVibrationField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ThrottleLeverAngleField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ThrottleResolverAngleField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ThrustField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TurbineGasTemperatureField As SimulationStateService.ParameterValue
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AirInletTemperature() As SimulationStateService.ParameterValue
            Get
                Return Me.AirInletTemperatureField
            End Get
            Set
                If (Object.ReferenceEquals(Me.AirInletTemperatureField, value) <> true) Then
                    Me.AirInletTemperatureField = value
                    Me.RaisePropertyChanged("AirInletTemperature")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FuelPressure() As SimulationStateService.ParameterValue
            Get
                Return Me.FuelPressureField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FuelPressureField, value) <> true) Then
                    Me.FuelPressureField = value
                    Me.RaisePropertyChanged("FuelPressure")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FuelTemperature() As SimulationStateService.ParameterValue
            Get
                Return Me.FuelTemperatureField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FuelTemperatureField, value) <> true) Then
                    Me.FuelTemperatureField = value
                    Me.RaisePropertyChanged("FuelTemperature")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HighPressureCompressorPressure() As SimulationStateService.ParameterValue
            Get
                Return Me.HighPressureCompressorPressureField
            End Get
            Set
                If (Object.ReferenceEquals(Me.HighPressureCompressorPressureField, value) <> true) Then
                    Me.HighPressureCompressorPressureField = value
                    Me.RaisePropertyChanged("HighPressureCompressorPressure")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HighPressureCompressorTemperature() As SimulationStateService.ParameterValue
            Get
                Return Me.HighPressureCompressorTemperatureField
            End Get
            Set
                If (Object.ReferenceEquals(Me.HighPressureCompressorTemperatureField, value) <> true) Then
                    Me.HighPressureCompressorTemperatureField = value
                    Me.RaisePropertyChanged("HighPressureCompressorTemperature")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LaneABroadbandVibration() As SimulationStateService.ParameterValue
            Get
                Return Me.LaneABroadbandVibrationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LaneABroadbandVibrationField, value) <> true) Then
                    Me.LaneABroadbandVibrationField = value
                    Me.RaisePropertyChanged("LaneABroadbandVibration")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LaneBBroadbandVibration() As SimulationStateService.ParameterValue
            Get
                Return Me.LaneBBroadbandVibrationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LaneBBroadbandVibrationField, value) <> true) Then
                    Me.LaneBBroadbandVibrationField = value
                    Me.RaisePropertyChanged("LaneBBroadbandVibration")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OilPressure() As SimulationStateService.ParameterValue
            Get
                Return Me.OilPressureField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OilPressureField, value) <> true) Then
                    Me.OilPressureField = value
                    Me.RaisePropertyChanged("OilPressure")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OilQuantity() As SimulationStateService.ParameterValue
            Get
                Return Me.OilQuantityField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OilQuantityField, value) <> true) Then
                    Me.OilQuantityField = value
                    Me.RaisePropertyChanged("OilQuantity")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OilTemperature() As SimulationStateService.ParameterValue
            Get
                Return Me.OilTemperatureField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OilTemperatureField, value) <> true) Then
                    Me.OilTemperatureField = value
                    Me.RaisePropertyChanged("OilTemperature")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Shaft1() As SimulationStateService.ShaftValue
            Get
                Return Me.Shaft1Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Shaft1Field, value) <> true) Then
                    Me.Shaft1Field = value
                    Me.RaisePropertyChanged("Shaft1")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Shaft1LaneAVibration() As SimulationStateService.ParameterValue
            Get
                Return Me.Shaft1LaneAVibrationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Shaft1LaneAVibrationField, value) <> true) Then
                    Me.Shaft1LaneAVibrationField = value
                    Me.RaisePropertyChanged("Shaft1LaneAVibration")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Shaft1LaneBVibration() As SimulationStateService.ParameterValue
            Get
                Return Me.Shaft1LaneBVibrationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Shaft1LaneBVibrationField, value) <> true) Then
                    Me.Shaft1LaneBVibrationField = value
                    Me.RaisePropertyChanged("Shaft1LaneBVibration")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Shaft2() As SimulationStateService.ShaftValue
            Get
                Return Me.Shaft2Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Shaft2Field, value) <> true) Then
                    Me.Shaft2Field = value
                    Me.RaisePropertyChanged("Shaft2")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Shaft2LaneAVibration() As SimulationStateService.ParameterValue
            Get
                Return Me.Shaft2LaneAVibrationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Shaft2LaneAVibrationField, value) <> true) Then
                    Me.Shaft2LaneAVibrationField = value
                    Me.RaisePropertyChanged("Shaft2LaneAVibration")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Shaft2LaneBVibration() As SimulationStateService.ParameterValue
            Get
                Return Me.Shaft2LaneBVibrationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Shaft2LaneBVibrationField, value) <> true) Then
                    Me.Shaft2LaneBVibrationField = value
                    Me.RaisePropertyChanged("Shaft2LaneBVibration")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ThrottleLeverAngle() As SimulationStateService.ParameterValue
            Get
                Return Me.ThrottleLeverAngleField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ThrottleLeverAngleField, value) <> true) Then
                    Me.ThrottleLeverAngleField = value
                    Me.RaisePropertyChanged("ThrottleLeverAngle")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ThrottleResolverAngle() As SimulationStateService.ParameterValue
            Get
                Return Me.ThrottleResolverAngleField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ThrottleResolverAngleField, value) <> true) Then
                    Me.ThrottleResolverAngleField = value
                    Me.RaisePropertyChanged("ThrottleResolverAngle")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Thrust() As SimulationStateService.ParameterValue
            Get
                Return Me.ThrustField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ThrustField, value) <> true) Then
                    Me.ThrustField = value
                    Me.RaisePropertyChanged("Thrust")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TurbineGasTemperature() As SimulationStateService.ParameterValue
            Get
                Return Me.TurbineGasTemperatureField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TurbineGasTemperatureField, value) <> true) Then
                    Me.TurbineGasTemperatureField = value
                    Me.RaisePropertyChanged("TurbineGasTemperature")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AlarmValue", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services"),  _
     System.SerializableAttribute()>  _
    Partial Public Class AlarmValue
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CurrentValueField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IsAcknowledgedField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LimitField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MinimumMaximumField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ParameterNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TypeField As SimulationStateService.AlarmType
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CurrentValue() As Double
            Get
                Return Me.CurrentValueField
            End Get
            Set
                If (Me.CurrentValueField.Equals(value) <> true) Then
                    Me.CurrentValueField = value
                    Me.RaisePropertyChanged("CurrentValue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IsAcknowledged() As Boolean
            Get
                Return Me.IsAcknowledgedField
            End Get
            Set
                If (Me.IsAcknowledgedField.Equals(value) <> true) Then
                    Me.IsAcknowledgedField = value
                    Me.RaisePropertyChanged("IsAcknowledged")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Limit() As Double
            Get
                Return Me.LimitField
            End Get
            Set
                If (Me.LimitField.Equals(value) <> true) Then
                    Me.LimitField = value
                    Me.RaisePropertyChanged("Limit")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MinimumMaximum() As Double
            Get
                Return Me.MinimumMaximumField
            End Get
            Set
                If (Me.MinimumMaximumField.Equals(value) <> true) Then
                    Me.MinimumMaximumField = value
                    Me.RaisePropertyChanged("MinimumMaximum")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ParameterName() As String
            Get
                Return Me.ParameterNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ParameterNameField, value) <> true) Then
                    Me.ParameterNameField = value
                    Me.RaisePropertyChanged("ParameterName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Type() As SimulationStateService.AlarmType
            Get
                Return Me.TypeField
            End Get
            Set
                If (Me.TypeField.Equals(value) <> true) Then
                    Me.TypeField = value
                    Me.RaisePropertyChanged("Type")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="EngineMode", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services")>  _
    Public Enum EngineMode As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        None = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        DryCranking = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Running = 2
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Stopped = 3
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Stopping = 4
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Starting = 5
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        AbortingStart = 6
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        WetCranking = 7
    End Enum
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="AlarmType", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services")>  _
    Public Enum AlarmType As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        High = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        HighCritical = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Low = 2
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        LowCritical = 3
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="EnginePLCStartReadings", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services"),  _
     System.SerializableAttribute()>  _
    Partial Public Class EnginePLCStartReadings
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AirIntakeTemperatureAtIdleField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FuelOnField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FuelOnSecondsField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HPRotationField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private IPRotationField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LPRotationField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LightupFuelFlowField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LitField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LitSecondsField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MaxTGTField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private N2DeadCrankSecondsField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private N2DeadCrankSpeedField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private N3DeadCrankSecondsField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private N3DeadCrankSpeedField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OilPressureAtIdleField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PrestartStartAirPressureField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PrestartTGTField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StarterCutField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StarterCutSecondsField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StartingStartAirPressureField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TimeToGIField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private VibrationAtIdleField As Double
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AirIntakeTemperatureAtIdle() As Double
            Get
                Return Me.AirIntakeTemperatureAtIdleField
            End Get
            Set
                If (Me.AirIntakeTemperatureAtIdleField.Equals(value) <> true) Then
                    Me.AirIntakeTemperatureAtIdleField = value
                    Me.RaisePropertyChanged("AirIntakeTemperatureAtIdle")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FuelOn() As Double
            Get
                Return Me.FuelOnField
            End Get
            Set
                If (Me.FuelOnField.Equals(value) <> true) Then
                    Me.FuelOnField = value
                    Me.RaisePropertyChanged("FuelOn")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FuelOnSeconds() As Double
            Get
                Return Me.FuelOnSecondsField
            End Get
            Set
                If (Me.FuelOnSecondsField.Equals(value) <> true) Then
                    Me.FuelOnSecondsField = value
                    Me.RaisePropertyChanged("FuelOnSeconds")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HPRotation() As Double
            Get
                Return Me.HPRotationField
            End Get
            Set
                If (Me.HPRotationField.Equals(value) <> true) Then
                    Me.HPRotationField = value
                    Me.RaisePropertyChanged("HPRotation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property IPRotation() As Double
            Get
                Return Me.IPRotationField
            End Get
            Set
                If (Me.IPRotationField.Equals(value) <> true) Then
                    Me.IPRotationField = value
                    Me.RaisePropertyChanged("IPRotation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LPRotation() As Double
            Get
                Return Me.LPRotationField
            End Get
            Set
                If (Me.LPRotationField.Equals(value) <> true) Then
                    Me.LPRotationField = value
                    Me.RaisePropertyChanged("LPRotation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LightupFuelFlow() As Double
            Get
                Return Me.LightupFuelFlowField
            End Get
            Set
                If (Me.LightupFuelFlowField.Equals(value) <> true) Then
                    Me.LightupFuelFlowField = value
                    Me.RaisePropertyChanged("LightupFuelFlow")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Lit() As Double
            Get
                Return Me.LitField
            End Get
            Set
                If (Me.LitField.Equals(value) <> true) Then
                    Me.LitField = value
                    Me.RaisePropertyChanged("Lit")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LitSeconds() As Double
            Get
                Return Me.LitSecondsField
            End Get
            Set
                If (Me.LitSecondsField.Equals(value) <> true) Then
                    Me.LitSecondsField = value
                    Me.RaisePropertyChanged("LitSeconds")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MaxTGT() As Double
            Get
                Return Me.MaxTGTField
            End Get
            Set
                If (Me.MaxTGTField.Equals(value) <> true) Then
                    Me.MaxTGTField = value
                    Me.RaisePropertyChanged("MaxTGT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property N2DeadCrankSeconds() As Double
            Get
                Return Me.N2DeadCrankSecondsField
            End Get
            Set
                If (Me.N2DeadCrankSecondsField.Equals(value) <> true) Then
                    Me.N2DeadCrankSecondsField = value
                    Me.RaisePropertyChanged("N2DeadCrankSeconds")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property N2DeadCrankSpeed() As Double
            Get
                Return Me.N2DeadCrankSpeedField
            End Get
            Set
                If (Me.N2DeadCrankSpeedField.Equals(value) <> true) Then
                    Me.N2DeadCrankSpeedField = value
                    Me.RaisePropertyChanged("N2DeadCrankSpeed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property N3DeadCrankSeconds() As Double
            Get
                Return Me.N3DeadCrankSecondsField
            End Get
            Set
                If (Me.N3DeadCrankSecondsField.Equals(value) <> true) Then
                    Me.N3DeadCrankSecondsField = value
                    Me.RaisePropertyChanged("N3DeadCrankSeconds")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property N3DeadCrankSpeed() As Double
            Get
                Return Me.N3DeadCrankSpeedField
            End Get
            Set
                If (Me.N3DeadCrankSpeedField.Equals(value) <> true) Then
                    Me.N3DeadCrankSpeedField = value
                    Me.RaisePropertyChanged("N3DeadCrankSpeed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OilPressureAtIdle() As Double
            Get
                Return Me.OilPressureAtIdleField
            End Get
            Set
                If (Me.OilPressureAtIdleField.Equals(value) <> true) Then
                    Me.OilPressureAtIdleField = value
                    Me.RaisePropertyChanged("OilPressureAtIdle")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PrestartStartAirPressure() As Double
            Get
                Return Me.PrestartStartAirPressureField
            End Get
            Set
                If (Me.PrestartStartAirPressureField.Equals(value) <> true) Then
                    Me.PrestartStartAirPressureField = value
                    Me.RaisePropertyChanged("PrestartStartAirPressure")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PrestartTGT() As Double
            Get
                Return Me.PrestartTGTField
            End Get
            Set
                If (Me.PrestartTGTField.Equals(value) <> true) Then
                    Me.PrestartTGTField = value
                    Me.RaisePropertyChanged("PrestartTGT")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StarterCut() As Double
            Get
                Return Me.StarterCutField
            End Get
            Set
                If (Me.StarterCutField.Equals(value) <> true) Then
                    Me.StarterCutField = value
                    Me.RaisePropertyChanged("StarterCut")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StarterCutSeconds() As Double
            Get
                Return Me.StarterCutSecondsField
            End Get
            Set
                If (Me.StarterCutSecondsField.Equals(value) <> true) Then
                    Me.StarterCutSecondsField = value
                    Me.RaisePropertyChanged("StarterCutSeconds")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartingStartAirPressure() As Double
            Get
                Return Me.StartingStartAirPressureField
            End Get
            Set
                If (Me.StartingStartAirPressureField.Equals(value) <> true) Then
                    Me.StartingStartAirPressureField = value
                    Me.RaisePropertyChanged("StartingStartAirPressure")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TimeToGI() As Double
            Get
                Return Me.TimeToGIField
            End Get
            Set
                If (Me.TimeToGIField.Equals(value) <> true) Then
                    Me.TimeToGIField = value
                    Me.RaisePropertyChanged("TimeToGI")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property VibrationAtIdle() As Double
            Get
                Return Me.VibrationAtIdleField
            End Get
            Set
                If (Me.VibrationAtIdleField.Equals(value) <> true) Then
                    Me.VibrationAtIdleField = value
                    Me.RaisePropertyChanged("VibrationAtIdle")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="EnginePLCStopReadings", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services"),  _
     System.SerializableAttribute()>  _
    Partial Public Class EnginePLCStopReadings
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EngineOilContentField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EngineOilTemperatureField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MaxVibrationDuringRundownField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NoHPRotationField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NoIPRotationField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NoLPRotationField As Double
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EngineOilContent() As Double
            Get
                Return Me.EngineOilContentField
            End Get
            Set
                If (Me.EngineOilContentField.Equals(value) <> true) Then
                    Me.EngineOilContentField = value
                    Me.RaisePropertyChanged("EngineOilContent")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EngineOilTemperature() As Double
            Get
                Return Me.EngineOilTemperatureField
            End Get
            Set
                If (Me.EngineOilTemperatureField.Equals(value) <> true) Then
                    Me.EngineOilTemperatureField = value
                    Me.RaisePropertyChanged("EngineOilTemperature")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property MaxVibrationDuringRundown() As Double
            Get
                Return Me.MaxVibrationDuringRundownField
            End Get
            Set
                If (Me.MaxVibrationDuringRundownField.Equals(value) <> true) Then
                    Me.MaxVibrationDuringRundownField = value
                    Me.RaisePropertyChanged("MaxVibrationDuringRundown")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NoHPRotation() As Double
            Get
                Return Me.NoHPRotationField
            End Get
            Set
                If (Me.NoHPRotationField.Equals(value) <> true) Then
                    Me.NoHPRotationField = value
                    Me.RaisePropertyChanged("NoHPRotation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NoIPRotation() As Double
            Get
                Return Me.NoIPRotationField
            End Get
            Set
                If (Me.NoIPRotationField.Equals(value) <> true) Then
                    Me.NoIPRotationField = value
                    Me.RaisePropertyChanged("NoIPRotation")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property NoLPRotation() As Double
            Get
                Return Me.NoLPRotationField
            End Get
            Set
                If (Me.NoLPRotationField.Equals(value) <> true) Then
                    Me.NoLPRotationField = value
                    Me.RaisePropertyChanged("NoLPRotation")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="IgnitionState", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services")>  _
    Public Enum IgnitionState As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        [On] = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Armed = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Off = 2
    End Enum
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="StartSelectorState", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services")>  _
    Public Enum StartSelectorState As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Crank = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Normal = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        IgnitionStart = 2
    End Enum
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ParameterValue", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services"),  _
     System.SerializableAttribute(),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(SimulationStateService.ShaftValue))>  _
    Partial Public Class ParameterValue
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AverageField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EngineeringUnitsField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HighAlarmLimitField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private HighCriticalAlarmLimitField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LowAlarmLimitField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LowCriticalAlarmLimitField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MaximumField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private MinimumField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private QualityField As SimulationStateService.Quality
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ValueField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private VersionField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Average() As Double
            Get
                Return Me.AverageField
            End Get
            Set
                If (Me.AverageField.Equals(value) <> true) Then
                    Me.AverageField = value
                    Me.RaisePropertyChanged("Average")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EngineeringUnits() As String
            Get
                Return Me.EngineeringUnitsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EngineeringUnitsField, value) <> true) Then
                    Me.EngineeringUnitsField = value
                    Me.RaisePropertyChanged("EngineeringUnits")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HighAlarmLimit() As Double
            Get
                Return Me.HighAlarmLimitField
            End Get
            Set
                If (Me.HighAlarmLimitField.Equals(value) <> true) Then
                    Me.HighAlarmLimitField = value
                    Me.RaisePropertyChanged("HighAlarmLimit")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property HighCriticalAlarmLimit() As Double
            Get
                Return Me.HighCriticalAlarmLimitField
            End Get
            Set
                If (Me.HighCriticalAlarmLimitField.Equals(value) <> true) Then
                    Me.HighCriticalAlarmLimitField = value
                    Me.RaisePropertyChanged("HighCriticalAlarmLimit")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LowAlarmLimit() As Double
            Get
                Return Me.LowAlarmLimitField
            End Get
            Set
                If (Me.LowAlarmLimitField.Equals(value) <> true) Then
                    Me.LowAlarmLimitField = value
                    Me.RaisePropertyChanged("LowAlarmLimit")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LowCriticalAlarmLimit() As Double
            Get
                Return Me.LowCriticalAlarmLimitField
            End Get
            Set
                If (Me.LowCriticalAlarmLimitField.Equals(value) <> true) Then
                    Me.LowCriticalAlarmLimitField = value
                    Me.RaisePropertyChanged("LowCriticalAlarmLimit")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Maximum() As Double
            Get
                Return Me.MaximumField
            End Get
            Set
                If (Me.MaximumField.Equals(value) <> true) Then
                    Me.MaximumField = value
                    Me.RaisePropertyChanged("Maximum")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Minimum() As Double
            Get
                Return Me.MinimumField
            End Get
            Set
                If (Me.MinimumField.Equals(value) <> true) Then
                    Me.MinimumField = value
                    Me.RaisePropertyChanged("Minimum")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Quality() As SimulationStateService.Quality
            Get
                Return Me.QualityField
            End Get
            Set
                If (Me.QualityField.Equals(value) <> true) Then
                    Me.QualityField = value
                    Me.RaisePropertyChanged("Quality")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Value() As Double
            Get
                Return Me.ValueField
            End Get
            Set
                If (Me.ValueField.Equals(value) <> true) Then
                    Me.ValueField = value
                    Me.RaisePropertyChanged("Value")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Version() As Integer
            Get
                Return Me.VersionField
            End Get
            Set
                If (Me.VersionField.Equals(value) <> true) Then
                    Me.VersionField = value
                    Me.RaisePropertyChanged("Version")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ShaftValue", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ShaftValue
        Inherits SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CorrectedSpeedField As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CorrectedSpeedRoot20Field As Double
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NumberField As Integer
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CorrectedSpeed() As Double
            Get
                Return Me.CorrectedSpeedField
            End Get
            Set
                If (Me.CorrectedSpeedField.Equals(value) <> true) Then
                    Me.CorrectedSpeedField = value
                    Me.RaisePropertyChanged("CorrectedSpeed")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CorrectedSpeedRoot20() As Double
            Get
                Return Me.CorrectedSpeedRoot20Field
            End Get
            Set
                If (Me.CorrectedSpeedRoot20Field.Equals(value) <> true) Then
                    Me.CorrectedSpeedRoot20Field = value
                    Me.RaisePropertyChanged("CorrectedSpeedRoot20")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Number() As Integer
            Get
                Return Me.NumberField
            End Get
            Set
                If (Me.NumberField.Equals(value) <> true) Then
                    Me.NumberField = value
                    Me.RaisePropertyChanged("Number")
                End If
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="TrentParameters", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services"),  _
     System.SerializableAttribute(),  _
     System.Runtime.Serialization.KnownTypeAttribute(GetType(SimulationStateService.TrentXWBParameters))>  _
    Partial Public Class TrentParameters
        Inherits SimulationStateService.SimulationParameters
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Shaft3Field As SimulationStateService.ShaftValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Shaft3LaneAVibrationField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private Shaft3LaneBVibrationField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Shaft3() As SimulationStateService.ShaftValue
            Get
                Return Me.Shaft3Field
            End Get
            Set
                If (Object.ReferenceEquals(Me.Shaft3Field, value) <> true) Then
                    Me.Shaft3Field = value
                    Me.RaisePropertyChanged("Shaft3")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Shaft3LaneAVibration() As SimulationStateService.ParameterValue
            Get
                Return Me.Shaft3LaneAVibrationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Shaft3LaneAVibrationField, value) <> true) Then
                    Me.Shaft3LaneAVibrationField = value
                    Me.RaisePropertyChanged("Shaft3LaneAVibration")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Shaft3LaneBVibration() As SimulationStateService.ParameterValue
            Get
                Return Me.Shaft3LaneBVibrationField
            End Get
            Set
                If (Object.ReferenceEquals(Me.Shaft3LaneBVibrationField, value) <> true) Then
                    Me.Shaft3LaneBVibrationField = value
                    Me.RaisePropertyChanged("Shaft3LaneBVibration")
                End If
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="TrentXWBParameters", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services"),  _
     System.SerializableAttribute()>  _
    Partial Public Class TrentXWBParameters
        Inherits SimulationStateService.TrentParameters
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StarterPressureField As SimulationStateService.ParameterValue
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StarterPressure() As SimulationStateService.ParameterValue
            Get
                Return Me.StarterPressureField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StarterPressureField, value) <> true) Then
                    Me.StarterPressureField = value
                    Me.RaisePropertyChanged("StarterPressure")
                End If
            End Set
        End Property
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Quality", [Namespace]:="http://schemas.datacontract.org/2004/07/ScottPage.RollsRoyce.TestCellSimulator.Di"& _ 
        "splays.Services")>  _
    Public Enum Quality As Integer
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Good = 0
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Suspect = 1
        
        <System.Runtime.Serialization.EnumMemberAttribute()>  _
        Bad = 2
    End Enum
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="SimulationStateService.ISimulationStateService")>  _
    Public Interface ISimulationStateService
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, Action:="http://tempuri.org/ISimulationStateService/Update")>  _
        Sub Update(ByVal state As SimulationStateService.SimulationState)
        
        <System.ServiceModel.OperationContractAttribute(IsOneWay:=true, AsyncPattern:=true, Action:="http://tempuri.org/ISimulationStateService/Update")>  _
        Function BeginUpdate(ByVal state As SimulationStateService.SimulationState, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
        
        Sub EndUpdate(ByVal result As System.IAsyncResult)
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface ISimulationStateServiceChannel
        Inherits SimulationStateService.ISimulationStateService, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class SimulationStateServiceClient
        Inherits System.ServiceModel.ClientBase(Of SimulationStateService.ISimulationStateService)
        Implements SimulationStateService.ISimulationStateService
        
        Private onBeginUpdateDelegate As BeginOperationDelegate
        
        Private onEndUpdateDelegate As EndOperationDelegate
        
        Private onUpdateCompletedDelegate As System.Threading.SendOrPostCallback
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Event UpdateCompleted As System.EventHandler(Of System.ComponentModel.AsyncCompletedEventArgs)
        
        Public Sub Update(ByVal state As SimulationStateService.SimulationState) Implements SimulationStateService.ISimulationStateService.Update
            MyBase.Channel.Update(state)
        End Sub
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Function BeginUpdate(ByVal state As SimulationStateService.SimulationState, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult Implements SimulationStateService.ISimulationStateService.BeginUpdate
            Return MyBase.Channel.BeginUpdate(state, callback, asyncState)
        End Function
        
        <System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)>  _
        Public Sub EndUpdate(ByVal result As System.IAsyncResult) Implements SimulationStateService.ISimulationStateService.EndUpdate
            MyBase.Channel.EndUpdate(result)
        End Sub
        
        Private Function OnBeginUpdate(ByVal inValues() As Object, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Dim state As SimulationStateService.SimulationState = CType(inValues(0),SimulationStateService.SimulationState)
            Return Me.BeginUpdate(state, callback, asyncState)
        End Function
        
        Private Function OnEndUpdate(ByVal result As System.IAsyncResult) As Object()
            Me.EndUpdate(result)
            Return Nothing
        End Function
        
        Private Sub OnUpdateCompleted(ByVal state As Object)
            If (Not (Me.UpdateCompletedEvent) Is Nothing) Then
                Dim e As InvokeAsyncCompletedEventArgs = CType(state,InvokeAsyncCompletedEventArgs)
                RaiseEvent UpdateCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState))
            End If
        End Sub
        
        Public Overloads Sub UpdateAsync(ByVal state As SimulationStateService.SimulationState)
            Me.UpdateAsync(state, Nothing)
        End Sub
        
        Public Overloads Sub UpdateAsync(ByVal state As SimulationStateService.SimulationState, ByVal userState As Object)
            If (Me.onBeginUpdateDelegate Is Nothing) Then
                Me.onBeginUpdateDelegate = AddressOf Me.OnBeginUpdate
            End If
            If (Me.onEndUpdateDelegate Is Nothing) Then
                Me.onEndUpdateDelegate = AddressOf Me.OnEndUpdate
            End If
            If (Me.onUpdateCompletedDelegate Is Nothing) Then
                Me.onUpdateCompletedDelegate = AddressOf Me.OnUpdateCompleted
            End If
            MyBase.InvokeAsync(Me.onBeginUpdateDelegate, New Object() {state}, Me.onEndUpdateDelegate, Me.onUpdateCompletedDelegate, userState)
        End Sub
    End Class
End Namespace
